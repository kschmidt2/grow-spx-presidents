let subhead=document.getElementsByClassName("chart-subhead"),headline=document.getElementById("chart-head");if(!headline)for(var i=0;i<subhead.length;i++)subhead[i].style.fontWeight="600";Highcharts.setOptions({lang:{thousandsSep:""}}),document.addEventListener("DOMContentLoaded",function(){setTimeout(function(){let e=document.getElementById("chart-container");if(e)console.log("yesId");else{console.log("noId");let e=document.getElementsByClassName("chart-area");for(var t=0;t<e.length;t++)e[t].style.display="none";document.getElementById("chart-fallback").innerHTML+='<img src="https://fm-static.cnbc.com/awsmedia/chart/2019/10/08/chart-error_wide.1570569331252.png" style="width: 100%;max-width:660px">'}Highcharts.chart(e,{chart:{type:"area",styledMode:!0,spacingBottom:25,spacingRight:100,spacingLeft:0},title:{text:null},data:{googleSpreadsheetKey:"10ZOmaDlywlSWoQAK_wuOnrhC0gMC0Kp39i9CZ4BGN9I"},plotOptions:{series:{lineWidth:1,clip:!0,marker:{enabled:!1,symbol:"circle",fillColor:"#ffffff",states:{hover:{enabled:!1}}}}},legend:{enabled:!1},xAxis:{labels:{style:{whiteSpace:"nowrap"}},tickLength:5},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow",formatter:function(){return this.value}},max:4e3},credits:{enabled:!1},tooltip:{enabled:!1},annotations:[{labels:[{point:{x:349126358e3,y:4e3,xAxis:0,yAxis:0},text:"Ronald Reagan<br><b>+118%</b>",y:0,x:-5},{point:{x:601327958e3,y:4e3,xAxis:0,yAxis:0},text:"George H.W. Bush<br><b>+53%</b>",y:40,x:-5},{point:{x:727731158e3,y:4e3,xAxis:0,yAxis:0},text:"Bill Clinton<br><b>+208%</b>",y:0,x:-5},{point:{x:980019158e3,y:4e3,xAxis:0,yAxis:0},text:"George W. Bush<br><b>-37%</b>",y:40,x:-5},{point:{x:1232739158e3,y:4e3,xAxis:0,yAxis:0},text:"Barack Obama<br><b>+173%</b>",y:0,x:-5},{point:{x:1572897491e3,y:4e3,xAxis:0,yAxis:0},text:"Donald Trump<br><b>+35%</b>",y:40,x:9}],labelOptions:{allowOverlap:!0,useHTML:!0,verticalAlign:"top",align:"left"}}],responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-18},tooltip:{enabled:!1}}}]}})},1e3)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
